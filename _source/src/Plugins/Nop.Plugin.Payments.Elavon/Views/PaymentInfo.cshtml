@model Nop.Plugin.Payments.Elavon.Models.PaymentInfoModel

<script>
    (function () {
        let lightbox;
        let sessionId;
        let orderCreated;
        const url = "@Model.LightboxUrl/client/library.js";

        if (!document.querySelector(`script[src="${url}"]`)) {
            const script = document.createElement("script");
            script.src = url;
            script.onload = async function() {
                const postData = addAntiForgeryToken();
                const formBody = new URLSearchParams(postData).toString()

                try {
                    const response = await fetch('@Url.Action("CreateOrder", "PaymentElavonPublic")', {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        body: formBody
                    });

                    sessionId = await response.text();
                } catch (err) {
                    displayBarNotification("Payment method failed to load. Please try again.", "warning");
                }
            };
            document.head.appendChild(script);
        }

        const originalSave = ConfirmOrder.save;
        const originalNextStep = ConfirmOrder.nextStep;
        const originalBack = ConfirmOrder.back;

        ConfirmOrder.save = runElavonLightbox;

        ConfirmOrder.nextStep = function() {
            setTimeout(() => lightbox.show(), 0);
        }

        ConfirmOrder.back = function() {
            ConfirmOrder.save = originalSave;
            ConfirmOrder.nextStep = originalNextStep;
            ConfirmOrder.back = originalBack;

            return originalBack.apply(this, arguments);
        }

        function runElavonLightbox() {
            const MessageTypes = window.ElavonLightbox.MessageTypes;

            if (!lightbox) {
                lightbox = new window.ElavonLightbox({
                    sessionId,
                    onReady: (error) => {
                        if (error) {
                            displayBarNotification("Payment method failed to load. Please try again.", "warning");
                        } else {
                            lightbox.show();
                        }
                    },
                    messageHandler: (message, defaultAction) => {
                        if (message.type === MessageTypes.transactionCreated) {
                            if (orderCreated) {
                                originalNextStep.call(ConfirmOrder, { success: true });
                            } else {
                                originalSave.apply(ConfirmOrder, arguments);
                                orderCreated = true;
                            }
                        }
                        defaultAction();
                    },
                });
            } else {
                lightbox.show();
            }
        }
    })();
</script>
